#!/usr/bin/env php
<?php

require_once __DIR__.'/../minima.php';

interface ARGS {
    public const COMMANDS = [
        null => 'WelcomeCommand',
        'about' => 'WelcomeCommand',
    ];

    public const OPTS = [
        //
    ];
}

class CommandRouter {
    public static function handle(): Closure {
        $route = self::getRoute();

        $function = ARGS::COMMANDS[$route] ?? null;

        if ($function === null || ! function_exists($function)) {
            return self::CommandNotFound();
        }

        return call_user_func($function);
    }

    private static function getRoute(): ?string {
        global $argv;

        if (! isset($argv[1]) || str_starts_with($argv[1], '-')) {
            return null;
        }

        return $argv[1];
    }

    private static function CommandNotFound(): Closure {
        return function (): int {
            $this->error('Command not found!');
            return 404;
        };
    }
}

function WelcomeCommand(): Closure {
    return function (): void {
        $this->formatted('<info>Welcome to MinimaPHP!</info> <comment>You are running version '.Minima::VERSION.'.</comment>');

        $this->warning("\nAvailable commands:");
        $this->formatted('  about <comment> - Show this screen</>');
    };
}

$function = CommandRouter::handle();

$exitCode = Command::main($function);

exit($exitCode);
